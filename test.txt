# test_auth.py
import pytest
from httpx import AsyncClient
from main import app
import jwt

SECRET_KEY = "mysecretkey"

@pytest.mark.asyncio
async def test_login_success():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        response = await ac.post("/login", json={
            "username": "johndoe",
            "password": "secret123"
        })
    assert response.status_code == 200
    data = response.json()
    assert "access_token" in data
    # Optionally decode to validate JWT
    decoded = jwt.decode(data["access_token"], SECRET_KEY, algorithms=["HS256"])
    assert decoded["sub"] == "johndoe"

@pytest.mark.asyncio
async def test_login_invalid_username():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        response = await ac.post("/login", json={
            "username": "invaliduser",
            "password": "secret123"
        })
    assert response.status_code == 404
    assert response.json()["detail"] == "User not found"

@pytest.mark.asyncio
async def test_login_invalid_password():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        response = await ac.post("/login", json={
            "username": "johndoe",
            "password": "wrongpassword"
        })
    assert response.status_code == 401
    assert response.json()["detail"] == "Invalid credentials"
